<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="Baetube_backEnd.mapper.NotificationMapper">
		
		<select id="select" resultType="notificationDto">
		
			SELECT user_id as userId, contents_id as contentsId FROM notification WHERE user_id = #{userId} AND contents_id = #{contentsId};
		
		</select>
		
		<delete id="delete">
		
			DELETE FROM notification WHERE user_id = #{userId} AND contents_id = #{contentsId}
		
		</delete>
		
		<insert id="insert" parameterType="java.util.List">
		
			INSERT INTO notification(user_id, contents_id, date)
			VALUES
				<foreach collection="subscribersUserId" item="item" index="index" separator=",">
					(#{item}, #{contentsId}, NOW())
				</foreach>
		</insert>
		
		<select id="selectVideoNotifications" resultType="HashMap">
		
			SELECT a.contents_id AS contentsId, a.date, a.user_id AS userId, a.checked, b.type,
			c.video_id AS videoId, c.channel_id AS channelId, c.thumbnail, c.title, c.url, d.profile, d.name
			FROM notification AS a
			LEFT JOIN contents AS b
			ON a.contents_id = b.contents_id
			LEFT JOIN video AS c
			ON b.contents_id = c.contents_id
			LEFT JOIN `channel` AS d
			ON c.channel_id = d.channel_id
			WHERE a.user_id = #{userId} AND b.`type` = 0;
		
		</select>

		<select id="selectCommunityNotifications" resultType="HashMap">
		
			SELECT a.contents_id as contentsId, a.date, a.user_id as userId, a.checked, b.type,
			c.community_id as communityId, c.channel_id as channelId, c.image_url as imageUrl,
			c.comment, d.profile, d.name
			FROM notification as a
			left JOIN contents as b
			on a.contents_id = b.contents_id
			left JOIN community as c
			on b.contents_id = c.contents_id
			left join `channel` as d
			on c.channel_id = d.channel_id
			where a.user_id = #{userId} and b.`type` = 1;
		
		</select>

	</mapper>