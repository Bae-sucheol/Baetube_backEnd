<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="Baetube_backEnd.mapper.CommunityMapper">
	
		<insert id="insert" statementType="CALLABLE" parameterType="map">
			CALL insert_community(
				#{community.channelId, mode=IN, jdbcType=INTEGER, javaType=int},
				#{community.imageUrl, mode=IN, jdbcType=VARCHAR, javaType=String},
				#{community.comment, mode=IN, jdbcType=VARCHAR, javaType=String},
				NOW(),
				#{community.communityId, mode=OUT, jdbcType=INTEGER, javaType=int},
				#{community.contentsId, mode=OUT, jdbcType=BIGINT, javaType=long}
			)
		</insert>
		
		<update id="update" parameterType="map">
			UPDATE community
			
			<set>
				<if test='!oldCommunity.imageUrl.equals(newCommunity.imageUrl)'>image_url = #{newCommunity.imageUrl}, </if>
				<if test='!oldCommunity.comment.equals(newCommunity.comment)'>`comment` = #{newCommunity.comment}, </if>
			</set>
			
			WHERE community_id = #{oldCommunity.communityId}
		</update>
		
		<delete id="delete">
		
			DELETE FROM community WHERE community_id = #{communityId}
		
		</delete>
		
		<select id="selectByChannel" resultType="communityDto">
		
		<!--  
			SELECT community_id as communityId, contents_id as contentsId, channel_id as channelId, `like`, hate,
				reply_count as replyCount, image_url as imageUrl, `comment`, `date` 
			FROM community NATURAL JOIN contents WHERE channel_id = #{channelId};
		-->
				 
				 SELECT a.community_id AS communityId, a.contents_id AS contentsId, a.channel_id AS channelId, `like` AS likeCount,
			 `hate` AS hateCount, b.reply_count AS replyCount, image_url AS imageUrl, a.comment, a.date, c.vote_id AS voteId,
			  `title`, d.vote_option_id AS voteOptionId, `option`, `count`, e.channel_id AS selectedChannelId FROM community AS a
				 LEFT JOIN contents AS b
				 ON a.contents_id = b.contents_id
				 LEFT JOIN vote AS c
				 ON a.community_id = c.community_id
				 LEFT JOIN vote_option AS d
				 ON c.vote_id = d.vote_id
				 LEFT JOIN selected_vote AS e
				 ON d.vote_option_id = e.vote_option_id
					AND e.channel_id = #{requestChannelId}
				 WHERE a.channel_id = #{channelId};
		
		</select>
		
		<select id="selectByCommunityId" resultType="communityDto">
		
			SELECT community_id as communityId, contents_id as contentsId, channel_id as channelId, `like`, hate,
				reply_count as replyCount, image_url as imageUrl, `comment`, `date` 
			FROM community NATURAL JOIN contents WHERE community_id = #{communityId};
		
		</select>
		
	</mapper>