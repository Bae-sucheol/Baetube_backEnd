<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="Baetube_backEnd.mapper.PlaylistMapper">
	
		<insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="playlist.playlistId">
		
			INSERT INTO playlist(channel_id, name, public, thumbnail)
			VALUES(#{playlist.channelId}, #{playlist.name}, #{playlist.visible}, #{playlist.thumbnail})
		
		</insert>
		
		<insert id="insertItem" parameterType="java.util.List" statementType="CALLABLE">
		
			INSERT INTO playlist_item(playlist_id, video_id)
			VALUES
		
				<foreach collection="playlistItem" item="item" index="index" separator=",">
					(#{item.playlistId}, #{item.videoId})
				</foreach>
			
		</insert>
		
		<insert id="insertLikeVideo" statementType="CALLABLE">
	
			CALL insert_like_video(#{channelId}, #{videoId})
		
		</insert>
		
		<delete id="delete" parameterType="map">
		
			DELETE FROM playlist WHERE playlist_id = #{playlist.playlistId} AND channel_id = #{playlist.channelId}
		
		</delete>
		
		<delete id="deleteItem" statementType="CALLABLE" parameterType="map">
		
			CALL delete_playlist_item(
				#{playlistItem.playlistId},
				#{playlistItem.videoId}
			)
		
		</delete>
		
		<select id="selectByChannelId" resultType="playlistDto">
		
			SELECT playlist_id as playlistId, channel_id as channelId, name, public as visible,
			video_count as videoCount, thumbnail FROM playlist WHERE channel_id = #{channelId}
		
		</select>
		
		<select id="selectByPlaylistId" resultType="playlistDto">
		
			SELECT * FROM playlist WHERE playlist_id = #{playlistId} 
		
		</select>
		
		<select id="selectPlaylistItem" resultType="playlistItemDto">
		
			SELECT playlist_id as playlistId, video_id as videoId FROM playlist_item WHERE playlist_id = #{playlistId} AND video_id = #{videoId}
		
		</select>
		
		<select id="selectPlaylistItemCount" parameterType="java.util.List" resultType="Integer">
		
			SELECT COUNT(*) FROM playlist_item WHERE
			
				<foreach collection="playlistItem" item="item" index="index" separator=" OR"> 
					(playlist_id = #{item.playlistId} AND video_id = #{item.videoId})
				</foreach>
		
		</select>
		
		<select id="selectLikePlaylist" resultType="playlistItemDto">
		
			SELECT playlist_id AS playlistId, video_id AS videoId FROM playlist_item WHERE playlist_id = 
			(SELECT playlist_id FROM playlist WHERE channel_id = #{channelId} AND `name` = '좋아요를 누른 동영상' AND public = 3) 
			AND video_id = #{videoId}
		
		</select>
		
		<select id="selectChannelLaterPlaylist" resultType="playlistDto">
		
			SELECT playlist_id as playlistId, channel_id as channelId, name, public as visible,
			video_count as videoCount, thumbnail FROM playlist WHERE channel_id = #{channelId} AND name = "나중에 볼 동영상"
		
		</select>
		
		<update id="update" parameterType="map">
		
			UPDATE playlist
			
			<set>
				<if test='!oldPlaylist.name.equals(newPlaylist.name)'>`name` = #{newPlaylist.name}, </if>
				<!--<if test='!oldPlaylist.visible.equals(newPlaylist.visible)'>public = #{newPlaylist.visible}, </if>-->
				<if test='oldPlaylist.visible != newPlaylist.visible'>public = #{newPlaylist.visible},</if>
				<if test='!oldPlaylist.thumbnail.equals(newPlaylist.thumbnail)'>thumbnail = #{newPlaylist.thumbnail}, </if>
			</set>
			
			WHERE playlist_id = #{newPlaylist.playlistId}
		
		</update>
		
		<update id="updateVideoCount">
		
			UPDATE playlist
			
			SET video_count = video_count + #{value}
			
			WHERE playlist_id = #{playlistId}
		
		</update>
		
		<update id="updateVideoCountMulti" parameterType="java.util.List">
		
			UPDATE playlist
			
			SET video_count = video_count + #{value}
			
			WHERE playlist_id IN (
			
			<foreach collection="playlistItem" item="item" index="index" separator=","> 
					#{item.playlistId}
				</foreach>
				
				)
		
		</update>

	</mapper>